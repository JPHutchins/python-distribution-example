name: Release

env:
  name: jpsapp

on:
  release:
    types: [published]

jobs:
  build-dist:
    name: 📦 Build distribution 
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: "3.x"
        cache: "pip"

    - run: pip install .[dev]
    
    - run: python -m build

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: Publish Python 🐍 distribution 📦 to PyPI
    runs-on: ubuntu-latest
    needs: build-dist
    environment:
      name: pypi
      url: https://pypi.org/p/${{ env.name }}
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish-dist-to-github:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v2.1.1
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'

  build-portable:
    name:  🔨 Build portable packages
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: "3.x"
        cache: "pip"

    - run: pip install .[dev]

    - name: Setup dotnet
      if: matrix.os == 'windows-latest'
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 7.0.x
    
    - name: Setup FPM
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt update
        sudo apt install -y ruby-full
        gem install --no-document fpm

    - if: matrix.os == 'ubuntu-latest'
      run: python -m distribution.linux

    - if: matrix.os == 'windows-latest'
      run: python -m distribution.windows
    
    - name: Get name of the artifacts
      id: get_name
      shell: bash
      run:  |
        echo "PORTABLE_NAME=$(ls dist | grep .*-.*\.zip)" >> $GITHUB_OUTPUT
        echo "MSI_NAME=$(ls dist | grep install-.*-.*\.msi)" >> $GITHUB_OUTPUT
        echo "DEB_NAME=$(ls dist | grep install-.*-.*\.deb)" >> $GITHUB_OUTPUT
        echo "RPM_NAME=$(ls dist | grep install-.*-.*\.rpm)" >> $GITHUB_OUTPUT

    - name: 🚀 Upload portable 
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/${{ steps.get_name.outputs.PORTABLE_NAME }}
        tag: ${{ github.ref }}
    
    - name: 🚀 Upload msi 
      if: matrix.os == 'windows-latest'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/${{ steps.get_name.outputs.MSI_NAME }}
        tag: ${{ github.ref }}

    - name: 🚀 Upload deb 
      if: matrix.os == 'ubuntu-latest'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/${{ steps.get_name.outputs.DEB_NAME }}
        tag: ${{ github.ref }}

    - name: 🚀 Upload rpm 
      if: matrix.os == 'ubuntu-latest'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/${{ steps.get_name.outputs.RPM_NAME }}
        tag: ${{ github.ref }}
